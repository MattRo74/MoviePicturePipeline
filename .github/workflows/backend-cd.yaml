name: Backend Continuous Deployment

on:
  workflow_dispatch:

  push:
    branches: main

defaults:
  run:
    working-directory: starter/backend

env:
  PYTHON_VERSION: '3.10.6'
  CLUSTER_NAME: cluster

jobs:
  test-build-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Check out code from Rep
      uses: actions/checkout@v3


    - name: Set up environment
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    
    - name: Restore Cache
      uses: actions/cache@v3
      with:
        path: |
          ~/.local/share/virtualenvs
          ~/.pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/Pipfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install Dependencies
      run:  |
        python -m pip install --upgrade pip
        pip install pipenv
        pip install flake8

    - name: Run the Linter
      run: pipenv run lint

    - name: Install pytest
      run: pipenv install pytest

    - name: Test
      run: pipenv run test
    
    - name: Configure AWS
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
        aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
        # aws-session-token: ${{secrets.AWS_SESSION_TOKEN}}
        aws-region: us-east-1
    
    - name: Login to ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build and push image to ECR
      env:
        IMAGE_TAG: V2
        REPO_NAME: backend
      run: | 
        docker build --build-arg=REAT_APP_MOVIE_API_URL= ${{secrets.REAT_APP_MOVIE_API_URL}} --tag 805368583177.dkr.ecr.us-east-1.amazonaws.com/$REPO_NAME:$IMAGE_TAG .
        docker push 805368583177.dkr.ecr.us-east-1.amazonaws.com/$REPO_NAME:$IMAGE_TAG
    
    - name: Update Kubernetes config
      run: |
        aws eks update-kubeconfig --name cluster --region us-east-1

    - name: Deploy to K8s
      working-directory: starter/backend/k8s
      env:
        IMAGE_TAG: V2
        REPO_NAME: backend
      run: |
        aws eks update-kubeconfig --name cluster --region us-east-1 
        kustomize edit set image backend=805368583177.dkr.ecr.us-east-1.amazonaws.com/$REPO_NAME:$IMAGE_TAG
        kustomize build | kubectl apply -f .
  
    - name: Gather K8 status
      run: |
        kubectl get pods -A
        kubectl get svc -A
        kubectl describe pods -A
        
