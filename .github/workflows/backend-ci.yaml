name: Backend Continuous Integration

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
    path:
      - '../../starter/backend/**'

defaults:
  run:
    working-directory: ./starter/backend

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
    - name: Check the Repository
      uses: actions/checkout@v3

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"

    - name: Restore Cache
      uses: actions/cache@v3
      with:
        path: |
          ~/.pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/Pipfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install Dependencies
      run:  |
        python -m pip install --upgrade pip
        pip install pipenv
        pip install flake8

    - name: Run the Linter
      run: pipenv run lint

  test:
    runs-on: ubuntu-latest

    steps:
    - name: Check the Repository
      uses: actions/checkout@v3

    - name: Use Python 3
      uses:  actions/setup-python@v5
      with:
        python-version: "3.10"
    
    - name: Install Dependencies
      run:  |
        python -m pip install --upgrade pip
        pip install pipenv
        pip install flake8

    - name: Install pytest
      run: pipenv install pytest

    - name: Test
      run: pipenv run test

build:
    needs: [lint, test]
    runs-on: ubuntu-latest

    steps:
    - name: Check the Repository
      uses: actions/checkout@v3

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"     
    
    - name: Build Docker Image - Backend
      run: docker build --tag mp-backend:latest .
    
    - name: Check docker image
      run: docker images|grep mp-backend

    - name: Run docker image
      run: docker run --name mp-backend -p 5000:5000 -d mp-backend

    - name: Check application
      run: curl http://localhost:5000/movies  