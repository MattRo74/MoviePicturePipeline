name: Frontend Continuous Deployment

on:
  workflow_dispatch:

  push:
    branches: main

defaults:
  run:
    working-directory: starter/frontend

env:
  NODE_VERSION: '18.14'
  CLUSTER_NAME: cluster

jobs:
  test-build-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Check out code from Rep
      uses: actions/checkout@v3
    
    - name: Set up a node.js env using a specified version
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Restore Cache
      uses: actions/cache@v3
      with:
        path: |
          ~/.npm
        key: ${{ runner.os }}-npm-cache-${{ hashFiles('**/package.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-npm-cache-

    - name: Install Dependencies
      run: npm ci

    - name: Run lint
      run: npm run lint -- --fix

    - name: Run test
      run: npm run test

    - name: Configure AWS
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
        aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
        # aws-session-token: ${{secrets.AWS_SESSION_TOKEN}}
        aws-region: us-east-1

    - name: Login to ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Update Kubernetes config
      run:
        aws eks update-kubeconfig --name cluster --region us-east-1

    - name: Gather K8 status as prep
      run: |
        kubectl get pods -A
        kubectl get svc -A
        kubectl describe pods -A 

    - name: Build and push image to ECR
      env:
        IMAGE_TAG: latest
        REPO_NAME: frontend
      run: | 
        echo ${{secrets.REACT_APP_MOVIE_API_URL}}
        docker build --build-arg=REACT_APP_MOVIE_API_URL=${{secrets.REACT_APP_MOVIE_API_URL}} --tag 805368583177.dkr.ecr.us-east-1.amazonaws.com/$REPO_NAME:$IMAGE_TAG .
        docker push 805368583177.dkr.ecr.us-east-1.amazonaws.com/$REPO_NAME:$IMAGE_TAG

    - name: Update Kubernetes config
      run:
        aws eks update-kubeconfig --name cluster --region us-east-1

    - name: Deploy to K8s
      working-directory: starter/frontend/k8s
      env:
        IMAGE_TAG: latest
        REPO_NAME: frontend
      run: |
        kustomize edit set image frontend=805368583177.dkr.ecr.us-east-1.amazonaws.com//$REPO_NAME:$IMAGE_TAG
        kustomize build|kubectl apply -f .
  
    - name: Gather K8 status
      run: |
        kubectl get pods -A
        kubectl get svc -A
        kubectl describe pods -A